name: Testing source build on ubuntu-latest

on: [push, pull_request]

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    steps:
      - uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: checkout libcasm-global
        uses: actions/checkout@v3
        with:
          repository: prisms-center/CASMcode_global
          path: CASMcode_global

      - name: checkout libcasm-xtal
        uses: actions/checkout@v3
        with:
          repository: prisms-center/CASMcode_crystallography
          path: CASMcode_crystallography

      - name: checkout libcasm-mapping
        uses: actions/checkout@v3
        with:
          path: CASMcode_mapping

      - name: Set up requirements & configuration variables
        run: |
          sudo apt-get update
          sudo apt-get install build-essential cmake
          pip install --upgrade pip wheel

      - name: make global
        shell: bash
        run: |
          cd CASMcode_global
          git submodule update --init --recursive
          pip install -v .

      - name: make test global
        shell: bash
        run: |
          cd CASMcode_global
          pip install -r test_requirements.txt
          python -m pytest -rsap python/tests

      - name: make xtal
        shell: bash
        run: |
          cd CASMcode_crystallography
          pip install -v .

      - name: make test xtal
        shell: bash
        run: |
          cd CASMcode_crystallography
          pip install -r test_requirements.txt
          python -m pytest -rsap python/tests

      - name: make mapping
        shell: bash
        run: |
          cd CASMcode_mapping
          pip install -v .

      - name: make test mapping
        shell: bash
        run: |
          cd CASMcode_mapping
          export CASM_PREFIX=$(python -c 'import site; print(site.getsitepackages()[0])')/libcasm
          ls -hl ${CASM_PREFIX}/lib
          ls -hl ${CASM_PREFIX}/mapping
          ls -hl ${CASM_PREFIX}/mapping/info
          ls -hl ${CASM_PREFIX}/mapping/mapsearch
          ls -hl ${CASM_PREFIX}/mapping/methods
          pip install -r test_requirements.txt
          python -m pytest -rsap python/tests

      - name: Set up doc requirements
        run: |
          cd CASMcode_mapping
          pip install -r doc_requirements.txt

      - name: build docs
        shell: bash
        run: |
          cd CASMcode_mapping
          cd python/doc
          sphinx-build -b html . _build/html

      - name: upload docs
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: libcasm-mapping-docs
          path: python/doc/_build/html
